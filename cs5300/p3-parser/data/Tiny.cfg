//
// WRITE A CORRECT GRAMMAR FOR THE TINY LANGUAGE IN THIS FILE.
//
// The grammar is described in data/tinyGrammar.pdf. Do not use dashes
// in your non-terminal names. I recommend you use mixed case naming for your
// non-terminals instead (e.g. stmtSeq).
//
// Do not put any string literals in this grammar (e.g. "="). Use only token
// names given in TinyLexer.tokens.
//
// This file contains an expression grammar that uses tokens described in
// TinyLexer.tokens.
//
// NOTE ONE ERROR in the pdf: the second production rule should read:
//    stmt-seq -> stmt-seq stmt | stmt

grammar Tiny;

goal: program;

program: stmtSeq;

stmtSeq: stmtSeq stmt
       | stmt;

stmt: ifStmt
    | repeatStmt
    | assignStmt
    | readStmt
    | writeStmt
    ;

ifStmt: IF exp THEN stmtSeq END
      | IF exp THEN stmtSeq ELSE stmtSeq END
      ;

repeatStmt: REPEAT stmtSeq UNTIL exp;

assignStmt: ID EQUAL exp;

readStmt: READ ID;

writeStmt: WRITE exp;

exp: simpleExp LT simpleExp
   | simpleExp EQUAL simpleExp
   | simpleExp
   ;

simpleExp: simpleExp PLUS term
         | simpleExp MINUS term
         | term
         ;

term: term MULTIPLY factor
    | term DIVIDE factor
    | factor
    ;

factor: OPAREN exp CPAREN
      | NUM
      | ID
      ;
